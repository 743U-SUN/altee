services:
  app:
    build:
      context: .
      target: development  # 開発モードを使用
    # Nginxを使用する場合、appのポート公開は内部ネットワークのみに制限可能
    # 開発の便宜上、直接アクセスも可能にしておく
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules  # node_modulesは保存しない
    depends_on:
      - db
      - minio
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/mydb
      - NODE_ENV=development
      # MinIO関連の環境変数
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_BUCKET_NAME=altee-uploads
      - MINIO_USE_SSL=false
    # ホットリロードを有効にする
    stdin_open: true
    tty: true
  
  nginx:
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      # 本番環境では証明書用のボリュームも追加
      # - ./certbot/conf:/etc/letsencrypt
      # - ./certbot/www:/var/www/certbot
    depends_on:
      - app
    restart: always
  
  prisma-studio:
    build:
      context: .
      target: development
    ports:
      - "5555:5555"
    volumes:
      - .:/app
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/mydb
    command: npx prisma studio
  
  db:
    image: postgres:17.4-alpine
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=mydb
    ports:
      - "5432:5432"
    # DBの健全性チェック
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # MinIOオブジェクトストレージ
  minio:
    image: minio/minio:latest
    restart: always
    ports:
      - "9000:9000"  # MinIO APIポート
      - "9001:9001"  # MinIO コンソールポート
    volumes:
      - minio_data:/data
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
      - MINIO_CONSOLE_ADDRESS=:9001
      - MINIO_ADDRESS=:9000
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # MinIOの初期設定とバケット作成
  minio-setup:
    image: minio/mc:latest
    depends_on:
      minio:
        condition: service_healthy
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add myminio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb myminio/altee-uploads;
      /usr/bin/mc anonymous set public myminio/altee-uploads;
      exit 0;
      "

volumes:
  postgres_data:
    # ボリュームの明示的な名前をつける
    name: altee_postgres_data
  minio_data:
    name: altee_minio_data

networks:
  default:
    name: altee_network